import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';
import L from 'leaflet';
import './booking.css';

interface BookingDetails {
  pickupLocation: string;
}

const Booking: React.FC = () => {
  const [bookingDetails, setBookingDetails] = useState<BookingDetails>({
    pickupLocation: '',
  });

  const [position, setPosition] = useState<[number, number] | null>(null);
  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);
  const navigate = useNavigate();

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å geolocation
  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setUserLocation([position.coords.latitude, position.coords.longitude]);
        },
        () => {
          setUserLocation([13.736717, 100.523186]); // Default location: Bangkok
        }
      );
    } else {
      setUserLocation([13.736717, 100.523186]);
    }
  }, []);

  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setBookingDetails({
      ...bookingDetails,
      [event.target.name]: event.target.value,
    });
  };

  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å
  const handleSearchLocation = async () => {
    const searchQuery = bookingDetails.pickupLocation;
    if (searchQuery) {
      try {
        /*const query = encodeURIComponent(`${searchQuery}, ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢`);
      const result = await fetch(
        `https://api.opencagedata.com/geocode/v1/json?q=${query}&key=aa77b85494e54325a94447699aa355cf`
      ); */
        const result = await fetch(
          `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(searchQuery)}&key=aa77b85494e54325a94447699aa355cf`
        );
        const data = await result.json();
        console.log(data); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå API
        console.log("Search Query:", searchQuery);
        console.log("API Response Results:", data.results);

  
        if (data.results && data.results.length > 0) {
          const { lat, lng } = data.results[0].geometry;
          setPosition([lat, lng]);
          setBookingDetails({ pickupLocation: searchQuery });
        } else {
          alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®");
        }
      } catch (error) {
        console.error("Error fetching location data:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
      }
    }
  };
  

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
  const handleLocationClick = (location: string, coords: [number, number]) => {
    setPosition(coords);
    setBookingDetails({ pickupLocation: location });
  };

  const FlyToLocation: React.FC = () => {
    const map = useMap();

    useEffect(() => {
      if (position) {
        map.flyTo(position, 13, { duration: 1.5 }); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
      } else if (userLocation) {
        map.flyTo(userLocation, 13, { duration: 1.5 });
      }
    }, [position, userLocation, map]); // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠ position ‡∏´‡∏£‡∏∑‡∏≠ userLocation ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á

    return position ? (
      <Marker
        position={position}
        icon={new L.Icon({
          iconUrl: '‡∏£‡∏ñ‡∏ñ‡∏ñ‡∏ñ.jpeg', // ‡∏ò‡∏á‡πÑ‡∏ó‡∏¢
          iconSize: [38, 95], // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ò‡∏á
          iconAnchor: [19, 95], // ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ò‡∏á‡∏¢‡∏∂‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
        })}
      />
    ) : null;
  };

  return (
    <div className="pickup-booking-container">
      <form>
        <div className="form-group">
          <div className="input-container">
            <i className="search-icon">&#128269;</i>
            <input
              type="text"
              name="pickupLocation"
              value={bookingDetails.pickupLocation}
              onChange={handleInputChange}
              placeholder="Where to ?"
            />
            <button type="button" onClick={handleSearchLocation}>
              ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            </button>
          </div>
        </div>

        <div className="map-container">
          {userLocation ? (
            <MapContainer center={userLocation} zoom={19}>
              <TileLayer
                url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                attribution='&copy; <a href="https://osm.org/copyright">OpenStreetMap</a> contributors'
              />
              <FlyToLocation />
            </MapContainer>
          ) : (
            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á...</p>
          )}
        </div>
      </form>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà */}
      <div className="location-list">
        
        <div
          className="location-item"
          onClick={() => handleLocationClick('‡πÄ‡∏î‡∏≠‡∏∞‡∏°‡∏≠‡∏•‡∏•‡πå‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä', [14.972245, 102.083462])}
        >
          <i className="location-icon">üìç</i>
          ‡πÄ‡∏î‡∏≠‡∏∞‡∏°‡∏≠‡∏•‡∏•‡πå‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä
        </div>
        <div
          className="location-item"
          onClick={() => handleLocationClick('‡πÇ‡∏£‡∏á‡πÄ‡∏´‡∏•‡πâ‡∏≤‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û ‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä', [14.899326, 102.056156])}
        >
          <i className="location-icon">üìç</i>
          ‡πÇ‡∏£‡∏á‡πÄ‡∏´‡∏•‡πâ‡∏≤‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û ‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä
        </div>
      </div>

      <div className="advancebookingcontainer" onClick={() => navigate('/map')}>
        <div className="advance-booking-button">
          ‡∏à‡∏≠‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤
        </div>
      </div>
    </div>
  );
};

export default Booking;
